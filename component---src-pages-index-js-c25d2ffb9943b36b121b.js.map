{"version":3,"sources":["webpack://nirvana-sushi/./src/components/title-decoration.component.js","webpack://nirvana-sushi/./src/pages/index.js"],"names":["DecorationSpan","styled","props","theme","colors","ui","decoration","Decoration","children","HomeWrapper","HomeLink","Link","fontSizes","title","text","primary","variant","Data","link","splittedLink","nombre","toUpperCase","split","length","key","to","path"],"mappings":"iKAGMA,E,QAAiBC,mBAAH,iFAAGA,CAAH,0EACE,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,GAAGC,cAKxCC,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OACE,gBAACR,EAAD,KACGQ,K,yGCLDC,EAAcR,oBAAH,8DAAGA,CAAH,6DAKXS,GAAWT,QAAOU,QAAV,sEAAGV,CAAH,6EAEC,qBAAGE,MAAkBS,UAAUC,SAEnC,qBAAGV,MAAkBC,OAAOU,KAAKC,WA4C5C,UAzCkB,WA+BhB,OACE,gCACE,gBAACN,EAAD,KACE,gBAAC,IAAD,CAAMO,QAAQ,SAAd,YA9BFC,UAAe,SAACC,GACd,IAAMC,EAAeD,EAAKE,OAAOC,cAAcC,MAAM,KACrD,OACEH,EAAaI,OAAS,EAElB,gBAACb,EAAD,CAAUc,IAAKN,EAAKE,OAAQK,GAAIP,EAAKQ,MACnC,gBAAC,IAAD,CAAMV,QAAQ,SACZ,gBAAC,IAAD,KACGG,EAAa,MAMpB,gBAACT,EAAD,CAAUc,IAAKN,EAAKE,OAAQK,GAAIP,EAAKQ,MACnC,gBAAC,IAAD,CAAMV,QAAQ,SACRG,EAAa,GADnB,IAEE,gBAAC,IAAD,KAAaA,EAAa","file":"component---src-pages-index-js-c25d2ffb9943b36b121b.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst DecorationSpan = styled.span`\n  background-color: ${props => props.theme.colors.ui.decoration};\n  width: 100%;\n  color: white;\n  padding: 0.175em 0.225em;\n`;\nexport const Decoration = ({ children }) => {\n  return (\n    <DecorationSpan>\n      {children}\n    </DecorationSpan>\n  );\n}","import React from \"react\"\nimport Data from \"../data/menu.json\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { Decoration } from \"../components/title-decoration.component\"\nimport Text from \"../components/text.component\"\n\nconst HomeWrapper = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  text-align: center;\n`;\nconst HomeLink = styled(Link)`\n  text-decoration: none;\n  font-size: ${({ theme }) => theme.fontSizes.title};\n  display: block;\n  color: ${({ theme }) => theme.colors.text.primary};\n  margin: 1rem;\n`;\nconst IndexPage = () => {\n\n  const RenderLinks = () => {\n    return (\n      Data.Links.map((link) => {\n        const splittedLink = link.nombre.toUpperCase().split(\" \");\n        return (\n          splittedLink.length < 2\n            ? (\n              <HomeLink key={link.nombre} to={link.path}>\n                <Text variant=\"title\">\n                  <Decoration>\n                    {splittedLink[0]}\n                  </Decoration>\n                </Text>\n              </HomeLink>\n            )\n            : (\n              <HomeLink key={link.nombre} to={link.path}>\n                <Text variant=\"title\">\n                  {`${splittedLink[0]} `}\n                  <Decoration>{splittedLink[1]}</Decoration>\n                </Text>\n              </HomeLink>\n            )\n        )\n      })\n    )\n  };\n\n\n  return (\n    <>\n      <HomeWrapper>\n        <Text variant=\"title\">~ MENU ~</Text>\n        {RenderLinks()}\n      </HomeWrapper>\n    </>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}